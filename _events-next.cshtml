@inherits ToSic.Sxc.Dnn.RazorComponent
@using ToSic.Razor.Blade;

@RenderPage("shared/_Assets.cshtml") 

@{
  string detailsLink;
  var events = AsList(Data["Events"]).GroupBy(c => c.Start.ToString("MM.yyyy"));
  var eventPage = Dnn.Tab.FullUrl;
}
@if(Edit.Enabled) {   
  <div class="app-add-tools">
    <div class="app-event-add">
      @Edit.Toolbar(toolbar: new object[] { 
        new { 
          command = new { 
            action = "new", 
            contentType = "Event",
            prefill = new { PublicationMoment = @DateTime.Now }
          } 
        },
        new { 
          command = new { 
            action = "contentitems", 
            contentType = "Event"
          },
          showCondition = true
        }
      })
      <span style="font-weight:bold;">@Html.Raw(App.Resources.AddNewEvent)</span>
    </div>
        
    <div class="app-date-add">            
      @Edit.Toolbar(toolbar: new object[] { 
        new { 
          command = new { 
            action = "new", 
            contentType = "EventDate",
            prefill = new { PublicationMoment = @DateTime.Now }
          } 
        },
        new { 
          command = new { 
            action = "contentitems", 
            contentType = "EventDate"
          },
          showCondition = true
        }
      })
      <span style="font-weight:bold;">@Html.Raw(App.Resources.AddNewEventDate)</span>
    </div>
        
    <div class="app-configure">            
        @Edit.Toolbar(AsList(App.Data["EventSettings"]).FirstOrDefault())
    
        <span style="font-weight:bold;">@Html.Raw(App.Resources.EventSettings)</span>
    </div>
  </div>
}

<div class="app-events app-event-list">
  @foreach (var e in events) {
    <div class="row">
      <div class="col-12">
        <h2>
          @e.First().Start.ToString("MMMM")
          
          @if (DateTime.Now.ToString("yyyy") != @e.First().Start.ToString("yyyy")) {
            <span class="year">@e.First().Start.ToString("yyyy")</span>
          }
        </h2>
      </div>
    </div> 
    foreach (var d in e) {
      if (DotNetNuke.Common.Globals.IsEditMode() || d.Event[0].ShowInLanguage != false) {
        var item =  d.Event[0];
        var detailslink = "";

        if (item.DetailsOpensLink == true) {
          if (Text.Has(item.Document)) {
            detailslink = item.Document;
          }
        } else {
          detailslink = Link.To(parameters: "details=" + @d.EntityId);
          detailslink += "/" + item.UrlKey;
        }
          
        <div class="row position-relative app-event-list-details mb-4" @Edit.TagToolbar(d)>
          <div class="col-12 col-md-6 col-lg-4 mb-2 mb-md-0">
            <div class='app-img @(Text.Has(item.Image) ? "" : "app-noimg")'>
                <span class="overlay" style='@(Text.Has(item.Image) ? "" : "background-image: url('" + App.Resources.PlaceHolderImg + "?max-width=600&amp;mode=max&amp;scale=both&amp;quality=80')")'></span>
                <img class="img-fluid" src="@(Text.Has(item.Image) ? item.Image : App.Path + "/src/images/trans.png")?w=800&h=480&mode=crop&scale=both&quality=80&anchor=@item.CropAnchor" alt="@item.Title" />
            </div>
          </div>
          <div class="col-12 col-md-6 col-lg-8 position-static">
            <div class="app-text">
              @* ToDo: Have to change - to pre and after seperator *@                                    
              <h2>@item.Title @((Text.Has(d.TitleAddition)) ? " - " + d.TitleAddition : "" ) @if(d.Event[0].ShowInLanguage == false && DotNetNuke.Common.Globals.IsEditMode()) { <span style="color:red;">(in dieser Sprache ausgeblendet)</span> }</h2>
              <div class="event-meta mb-3">
                <span class="app-date app-date-border">@d.Start.ToString("d")@((d.End != null) ? " - " + d.End.ToString("d") : "")</span>
                <span class="app-categories">@item.Topic[0].Title</span>
              </div>
              
              @if(Text.Has(item.ShortDescription)) {
                <p>@item.ShortDescription.Replace("\n", "<br />")</p>
              }

              @if (item.DetailsOpensLink == true) {
                if (Text.Has(item.Document)) {
                  <a class="stretched-link" href="@item.Document" target="_blank">@Html.Raw(App.Resources.LabelReadMore)</a>
                }
              } else {
                <a class="stretched-link" href="@detailslink">@Html.Raw(App.Resources.LabelReadMore)</a>
              }
            </div>
          </div>
        </div>
      }
    }
  }

  @RenderPage("shared/_Paging.cshtml", new { eventPage = eventPage }) 
</div>

