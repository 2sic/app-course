@inherits ToSic.Sxc.Dnn.RazorComponent
@using ToSic.Razor.Blade;
@using ToSic.SexyContent.ContentBlocks;

@{
	var eventDate = AsList(Data).FirstOrDefault();
	var resources = App.Resources;

	if(eventDate == null) {
		<h1>@resources.LabelEventNotExists</h1>
    <p>@resources.LabelEventNotExistsText</p>

		@Code.BackToListButton();
    Code.SetNotFoundHttpHeaders();
		return ;
	}

	var item = eventDate.Event;
	var registrations = AsList(App.Data["Registration"])
											.Where(c => c.Status == "registered" && c.EventDateEntity.Count > 0 && c.EventDateEntity.EntityGuid == eventDate.EntityGuid);
	var freeSeats = eventDate.Seats - registrations.Count();

	HtmlPage.Title = eventDate.Start.ToString("d") 
    + ((eventDate.End != null) 
      ? " - " + eventDate.End.ToString("d") 
      : "" ) 
    + " - " + item.Title + " | "
    + Dnn.Module.ParentTab.TabName + " | " 
    + Dnn.Portal.PortalName;
}

@RenderPage("shared/_Assets.cshtml") 

<div class="app-events app-events-detail" @Edit.TagToolbar(item, toolbar: new [] {"toolbar=empty", "+edit", "+app"})>
	<div class="app-events-detail-content mb-4">
		<h1 class="m-0">@Code.Title(item, eventDate)</h1>

		<div class="event-meta">
			<span class="app-events-date">@eventDate.Start.ToString("d") @((eventDate.End != null) ? " - " + eventDate.End.ToString("d") : "" ) | </span>
			<span class="app-events-categories">@item.Category.Title</span>
		</div>

		<img class="d-block d-md-none m-auto img-fluid" src="@item.Image?w=540&amp;quality=95" alt="@item.Title" />
	</div>

	<div class="app-events-detail-content">
		<div class="row">
			<div class='col-12 @(Text.Has(item.Image) ? "col-md-8" : "")'>
				<h2 class="h5">@item.ShortDescription</h2>
				<div class="app-events-detail-body mb-4">
					@Render.All(item, field: "BodyContentBlocks", merge: item.Description)

					@if(Text.Has(Text.First(eventDate.Document, item.Document))) {
						<a class="btn btn-md btn-primary" href="@Text.First(eventDate.Document, item.Document)" target="_blank">@Html.Raw(resources.Download)</a>
					}
				</div>

				<div class="app-events-detail-infos row mb-4">
					@* Event Location *@
					@Code.DetailsBox(resources.Location, Text.First(eventDate.Location, item.Location))

					@* Event Leader *@
					@Code.DetailsBox(resources.Management, Text.First(eventDate.Person, item.Person))

					@* Event Fee *@
					@Code.DetailsBox(resources.Fee, Text.First(eventDate.Fee, item.Fee))

					@* Event Registration / Seat Info *@
					@if(eventDate.RegistrationEnabled && eventDate.IsFullyBooked == false && eventDate.IsCancelled == false && eventDate.Seats != null) {
						@Code.DetailsBox(resources.Seats, freeSeats.ToString())
					}

					@* Event Time *@
					@Code.DetailsBox(resources.DateTime, eventDate.TimeSpecifics)
				</div>

				@* Event Status (Registration, Canceled, Overbooked) *@
				@if (eventDate.IsCancelled == true) {
					<div class="alert alert-warning">
						@resources.StatusCanceled
					</div>
				} else if(App.Settings.RegistrationEnabled && eventDate.RegistrationEnabled) {
					if(1 <= 0 || eventDate.IsFullyBooked) { // Turn 1 back to freeSeats after fix
						<div class="alert alert-warning">
							@resources.StatusFullyBooked
						</div>
					} else {
						<a class="btn btn-md btn-primary" href="@Link.To(parameters: "mid=" + Dnn.Module.ModuleID + "&cid=" + @item.EntityId + "&did=" + eventDate.EntityId)/@item.UrlKey">@Html.Raw(resources.ButtonRegister)</a>
					}
				}

				@* Other Dates of Event *@
				<div class="app-events-further-events my-4">
					<h5 class="mb-3">@resources.AllDatesOfThisEvent</h5>
					
					<ul class="list-group list-group-flush">
						@foreach (var d in AsList(Data["SameEvent"]).OrderBy(d => d.Start)) {
							<li class="list-group-item mb-0 @((d.EntityId == eventDate.EntityId) ? "current" : "")"
								@Edit.TagToolbar(d, toolbar: new [] {
          				"toolbar=empty", "+edit", "+new&color=red?contentType=EventDate", "+app"
        				})
							>
								<a href="@Link.To(parameters: "details=" + d.EntityId)">
									<strong>@d.Start.ToString("d")  @((d.End != null) ? " - " + d.End.ToString("d") : "")</strong>
									@(Text.Has(d.TitleAddition) ? " - " + d.TitleAddition : "")
									@(Text.Has(d.TimeSpecifics) ? " - " + d.TimeSpecifics : "")
								</a>
							</li>
						}
					</ul>
				</div>

				@Code.BackToListButton()
			</div>

			@if (Text.Has(item.Image)) {
				<div class="col-12 col-md-4 d-none d-md-block")>
					<img class="img-fluid" src="@item.Image?w=540&amp;quality=95" alt="@item.Title" />
				</div>
			}
		</div>
	</div>
</div>

